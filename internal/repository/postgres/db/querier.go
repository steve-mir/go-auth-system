// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.22.0

package db

import (
	"context"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	AssignRoleToUser(ctx context.Context, arg AssignRoleToUserParams) error
	CountAuditLogs(ctx context.Context) (int64, error)
	CountAuditLogsByAction(ctx context.Context, action string) (int64, error)
	CountRoles(ctx context.Context) (int64, error)
	CountUserAuditLogs(ctx context.Context, userID uuid.UUID) (int64, error)
	CountUserMFAMethods(ctx context.Context, userID uuid.UUID) (int64, error)
	CountUserSessions(ctx context.Context, userID uuid.UUID) (int64, error)
	CountUsers(ctx context.Context) (int64, error)
	CreateAuditLog(ctx context.Context, arg CreateAuditLogParams) (AuditLog, error)
	CreateMFAConfig(ctx context.Context, arg CreateMFAConfigParams) (UserMfa, error)
	CreateRole(ctx context.Context, arg CreateRoleParams) (Role, error)
	CreateSession(ctx context.Context, arg CreateSessionParams) (UserSession, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	DeleteExpiredSessions(ctx context.Context) error
	DeleteMFAConfig(ctx context.Context, id uuid.UUID) error
	DeleteOldAuditLogs(ctx context.Context, timestamp pgtype.Timestamp) error
	DeleteRole(ctx context.Context, id uuid.UUID) error
	DeleteSession(ctx context.Context, id uuid.UUID) error
	DeleteSessionByTokenHash(ctx context.Context, tokenHash string) error
	DeleteUser(ctx context.Context, id uuid.UUID) error
	DeleteUserMFAConfigs(ctx context.Context, userID uuid.UUID) error
	DeleteUserSessions(ctx context.Context, userID uuid.UUID) error
	DisableMFA(ctx context.Context, id uuid.UUID) error
	EnableMFA(ctx context.Context, id uuid.UUID) error
	GetAuditLogByID(ctx context.Context, id uuid.UUID) (AuditLog, error)
	GetAuditLogsByAction(ctx context.Context, arg GetAuditLogsByActionParams) ([]AuditLog, error)
	GetAuditLogsByResource(ctx context.Context, arg GetAuditLogsByResourceParams) ([]AuditLog, error)
	GetAuditLogsByTimeRange(ctx context.Context, arg GetAuditLogsByTimeRangeParams) ([]AuditLog, error)
	GetAuditLogsByUserAndAction(ctx context.Context, arg GetAuditLogsByUserAndActionParams) ([]AuditLog, error)
	GetEnabledMFAMethods(ctx context.Context, userID uuid.UUID) ([]string, error)
	GetMFAConfigByID(ctx context.Context, id uuid.UUID) (UserMfa, error)
	GetRecentAuditLogs(ctx context.Context, arg GetRecentAuditLogsParams) ([]AuditLog, error)
	GetRoleByID(ctx context.Context, id uuid.UUID) (Role, error)
	GetRoleByName(ctx context.Context, name string) (Role, error)
	GetRoleUsers(ctx context.Context, roleID uuid.UUID) ([]User, error)
	GetSessionByID(ctx context.Context, id uuid.UUID) (UserSession, error)
	GetSessionByTokenHash(ctx context.Context, tokenHash string) (UserSession, error)
	GetSessionsForCleanup(ctx context.Context, limit int32) ([]GetSessionsForCleanupRow, error)
	GetUserAuditLogs(ctx context.Context, arg GetUserAuditLogsParams) ([]AuditLog, error)
	GetUserByEmail(ctx context.Context, email string) (User, error)
	GetUserByID(ctx context.Context, id uuid.UUID) (User, error)
	GetUserByUsername(ctx context.Context, username pgtype.Text) (User, error)
	GetUserMFAByMethod(ctx context.Context, arg GetUserMFAByMethodParams) (UserMfa, error)
	GetUserMFAConfigs(ctx context.Context, userID uuid.UUID) ([]UserMfa, error)
	GetUserRoles(ctx context.Context, userID uuid.UUID) ([]Role, error)
	GetUserSessions(ctx context.Context, arg GetUserSessionsParams) ([]UserSession, error)
	GetUsersByRole(ctx context.Context, name string) ([]User, error)
	ListRoles(ctx context.Context, arg ListRolesParams) ([]Role, error)
	ListUsers(ctx context.Context, arg ListUsersParams) ([]User, error)
	RemoveRoleFromUser(ctx context.Context, arg RemoveRoleFromUserParams) error
	UpdateMFAConfig(ctx context.Context, arg UpdateMFAConfigParams) (UserMfa, error)
	UpdateRole(ctx context.Context, arg UpdateRoleParams) (Role, error)
	UpdateSessionLastUsed(ctx context.Context, id uuid.UUID) error
	UpdateUser(ctx context.Context, arg UpdateUserParams) (User, error)
	UpdateUserLoginInfo(ctx context.Context, arg UpdateUserLoginInfoParams) error
}

var _ Querier = (*Queries)(nil)
