CREATE TABLE "social_providers" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar UNIQUE,
  "api_key" varchar,
  "oauth_settings" json
);

CREATE TABLE "social_provider_users" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "provider_id" int,
  "provider_user_id" varchar,
  "user_id" uuid,
  "access_token" varchar,
  "refresh_token" varchar
);

CREATE TABLE "user_profiles" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" uuid,
  "first_name" varchar,
  "last_name" varchar,
  "phone" varchar
);

CREATE TABLE "roles" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar
);

CREATE TABLE "user_roles" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" uuid,
  "role_id" int
);

CREATE TABLE "password_reset_requests" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" uuid,
  "token" varchar,
  "expires_at" timestamptz,
  "used" boolean
);

CREATE TABLE "two_factor_secrets" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" uuid,
  "secret_key" varchar,
  "recovery_codes" json
);

CREATE TABLE "two_factor_revocation" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" uuid,
  "revoked_at" timestamptz
);

CREATE TABLE "two_factor_backup_codes" (
  "user_id" uuid,
  "code" varchar
);

CREATE TABLE "audit_logs" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" uuid,
  "action" varchar,
  "created_at" current_timestamptz,
  "updated_at" timestamptz
);

CREATE TABLE "user_preferences" (
  "user_id" uuid,
  "preferences" json
);

CREATE TABLE "email_verification_requests" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" uuid,
  "email" varchar,
  "token" varchar UNIQUE,
  "expires_at" timestamptz,
  "is_verified" boolean,
  "created_at" current_timestamptz,
  "updated_at" timestamptz
);

CREATE TABLE "notifications" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" uuid,
  "title" varchar,
  "action" varchar,
  "content" varchar,
  "details" json,
  "read_at" timestamptz,
  "created_at" current_timestamptz
);

CREATE TABLE "api_keys" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" uuid,
  "key" varchar UNIQUE,
  "permissions" json,
  "created_at" current_timestamptz,
  "updated_at" timestamptz,
  "last_used_at" timestamptz,
  "is_active" boolean,
  "is_deleted" boolean
);

CREATE TABLE "user_api_keys" (
  "user_id" uuid,
  "api_key_id" int
);




CREATE INDEX ON "social_provider_users" ("provider_id", "provider_user_id");

CREATE INDEX ON "user_roles" ("role_id");

CREATE INDEX ON "password_reset_requests" ("user_id", "token");

CREATE INDEX ON "audit_logs" ("user_id", "updated_at", "created_at");

CREATE INDEX ON "email_verification_requests" ("user_id", "token", "email", "created_at", "updated_at");

CREATE INDEX ON "notifications" ("user_id", "created_at", "read_at");

CREATE INDEX ON "api_keys" ("user_id", "key", "updated_at", "created_at");

CREATE INDEX ON "user_api_keys" ("user_id", "api_key_id");





ALTER TABLE "social_provider_users" ADD FOREIGN KEY ("provider_id") REFERENCES "social_providers" ("id");

ALTER TABLE "social_provider_users" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "user_profiles" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "user_roles" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "user_roles" ADD FOREIGN KEY ("role_id") REFERENCES "roles" ("id");

ALTER TABLE "password_reset_requests" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "two_factor_secrets" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "two_factor_revocation" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "two_factor_backup_codes" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "audit_logs" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "user_preferences" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "email_verification_requests" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "notifications" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "api_keys" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "user_api_keys" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "user_api_keys" ADD FOREIGN KEY ("api_key_id") REFERENCES "api_keys" ("id");


-- // Partial indexes

-- // CREATE INDEX active_users_idx ON users (email) 
-- // WHERE is_deleted = false;

-- // CREATE INDEX verified_requests_idx ON email_verification_requests (user_id)
-- // WHERE is_verified = true;

-- // CREATE INDEX open_reset_token_idx ON password_reset_requests (token) 
-- // WHERE used = false;

-- I have this query
-- CREATE TABLE "users" (
--   "id" uuid PRIMARY KEY,
--   "name" varchar,
--   "email" varchar UNIQUE,
--   "username" varchar UNIQUE,
-- );
-- CREATE INDEX ON "users" ("email", "username", "created_at", "updated_at");
-- It is for an authentication system, I am using sqlc. generate sqlc query for me the auth system involving all operations that could be performed on the the "users" table