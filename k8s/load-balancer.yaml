apiVersion: v1
kind: Service
metadata:
  name: go-auth-system-lb
  namespace: auth-system
  labels:
    app: go-auth-system
    component: load-balancer
  annotations:
    # AWS Load Balancer Controller annotations
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-protocol: "http"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: "/health/ready"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval-seconds: "10"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-timeout-seconds: "5"
    service.beta.kubernetes.io/aws-load-balancer-healthy-threshold-count: "2"
    service.beta.kubernetes.io/aws-load-balancer-unhealthy-threshold-count: "3"
    
    # GCP Load Balancer annotations
    cloud.google.com/load-balancer-type: "External"
    cloud.google.com/backend-config: '{"default": "go-auth-system-backend-config"}'
    
    # Azure Load Balancer annotations
    service.beta.kubernetes.io/azure-load-balancer-internal: "false"
    service.beta.kubernetes.io/azure-load-balancer-health-probe-request-path: "/health/ready"
spec:
  type: LoadBalancer
  selector:
    app: go-auth-system
  ports:
    - name: http
      port: 80
      targetPort: 8080
      protocol: TCP
    - name: https
      port: 443
      targetPort: 8443
      protocol: TCP
    - name: grpc
      port: 9090
      targetPort: 9090
      protocol: TCP
  sessionAffinity: None
  externalTrafficPolicy: Local # Preserve source IP

---
apiVersion: networking.gke.io/v1
kind: BackendConfig
metadata:
  name: go-auth-system-backend-config
  namespace: auth-system
spec:
  healthCheck:
    checkIntervalSec: 10
    timeoutSec: 5
    healthyThreshold: 2
    unhealthyThreshold: 3
    type: HTTP
    requestPath: /health/ready
    port: 8080
  connectionDraining:
    drainingTimeoutSec: 60
  sessionAffinity:
    affinityType: "NONE"
  timeoutSec: 30

---
apiVersion: v1
kind: Service
metadata:
  name: go-auth-system-internal
  namespace: auth-system
  labels:
    app: go-auth-system
    component: internal-service
spec:
  type: ClusterIP
  selector:
    app: go-auth-system
  ports:
    - name: http
      port: 8080
      targetPort: 8080
      protocol: TCP
    - name: grpc
      port: 9090
      targetPort: 9090
      protocol: TCP
    - name: metrics
      port: 9091
      targetPort: 9091
      protocol: TCP

---
# Horizontal Pod Autoscaler for load balancing
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: go-auth-system-hpa
  namespace: auth-system
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: go-auth-system
  minReplicas: 3
  maxReplicas: 20
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
    - type: Pods
      pods:
        metric:
          name: http_requests_per_second
        target:
          type: AverageValue
          averageValue: "100"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 10
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60
        - type: Pods
          value: 2
          periodSeconds: 60

---
# Pod Disruption Budget for high availability
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: go-auth-system-pdb
  namespace: auth-system
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: go-auth-system

---
# Network Policy for load balancer security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: go-auth-system-lb-policy
  namespace: auth-system
spec:
  podSelector:
    matchLabels:
      app: go-auth-system
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: kube-system
      ports:
        - protocol: TCP
          port: 8080
        - protocol: TCP
          port: 9090
    - from: []
      ports:
        - protocol: TCP
          port: 8080
        - protocol: TCP
          port: 9090
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              name: kube-system
    - to: []
      ports:
        - protocol: TCP
          port: 5432 # PostgreSQL
        - protocol: TCP
          port: 6379 # Redis
        - protocol: TCP
          port: 53   # DNS
        - protocol: UDP
          port: 53   # DNS